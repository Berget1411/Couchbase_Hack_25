"use client";

import { motion } from "framer-motion";
import { useMemo } from "react";

const asciiArt = `....................................................................................
..........................................-++=..:...................................
.............-.........................=**#######+:.........-.......................
.............................-.......:=#***##**##*=.....................-...........
......-.............................:+******#**##*#=................................
.............-...................:=*********####%##*:...............................
..............................:+************#*####=..................-..............
...-*+=:.................-=****##*****####*######%+:................................
...-*#*#**##*********##**#*******#######**#%%#***#%+................................
...:=*****#*##*######****#*****#####*#*++--*%##***##=.........-.....................
....-******###*##**###**###*#*###****+-...:-*%%#**##%-..................-...........
....:=******###*###****#**#**#####**+:......-*%##***%#-.............................
.....:+*#***##***###******##**###**+:.......:-*%##**#%*-............................
......-*#****######***#**#*##*##**+:.........:-*%#*+*#%#:...........................
......:-*******#**********#***##**-...........-:=*##***#%*-.........................
........:-+#***************##**##**-............:=*##****#%*-.......................
............:=*#************+*###*#+.............-=*###**#%@%#-.....................
.............:-+#*************+*###*-......-......:-+*#%####%%*:....................
.......-.......:-=*#***************+.................-=*#%%%*###%=..................
..................:--##*************-.................:-+*%#****#%*.................
............-.......:--+#************#..................-=*#%#**#%%%-...............
........................::*********--+:...................:-=*###***#%*.............
.../PPPP/PPPPPPPPP..........++#*****--#....................:-=+###*#%%%.............
..| PPPPPPPPPPPPPPP..............-'++-#......................:=#%#***%%+............
..| PPPP_______/PPPP..-.........................-.............:=#%#***%%+...........
..| PPPP......| PPPP..........................................:=#%#***%%+...........
..| PPPPPPPPPPPPPPP./YYYY..../YYYY........-...................:=#%#***%%+...........
..| PPPP/PPPPPPPP..| YYYY...| YYYY............................:=*%##**#%#-..........
..| PPPP_______/...| YYYY...| YYYY.............................=*%%##*#%%=..........
..| PPPP............\\ YYYYYYYYYYYY.....ooo....................=+%%%#**%%+...........
..| PPPP.............\\ YYYYY_/YYYY.../OOOOO....-.............:=+###**#%#:...........
../____/..............\\___.| YYYY...| OOO...................=+#%#**#%#:............
...................../YYYY..| YYYY....\\__/.................:=+***++++**-............
.............-......| YYYYY/ YYYYY...-..............................................
.....................\\YYYYYYYYYYYY...................................................
.......-..............\\_______/....................................................
....................................................................................
....................................................................................`;

export function MatrixAsciiArt() {
  // Memoize the line splitting to prevent recalculation on every render
  const asciiLines = useMemo(() => asciiArt.split("\n"), []);

  return (
    <div className='relative w-full h-full flex items-center justify-center overflow-hidden'>
      {/* Main ASCII art with optimized animation */}
      <motion.pre
        className='text-xs md:text-sm lg:text-sm xl:text-base font-mono whitespace-pre text-primary leading-tight text-center relative z-10 max-w-full'
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{
          opacity: 1,
          scale: 1,
          filter: [
            "drop-shadow(0 0 5px rgba(34, 197, 94, 0.3))",
            "drop-shadow(0 0 8px rgba(34, 197, 94, 0.6))",
            "drop-shadow(0 0 5px rgba(34, 197, 94, 0.3))",
          ],
        }}
        transition={{
          opacity: { duration: 1, ease: "easeOut" },
          scale: { duration: 1, ease: "easeOut" },
          filter: { duration: 3, repeat: Infinity, ease: "easeInOut" },
        }}
        whileHover={{
          filter: "drop-shadow(0 0 10px rgba(34, 197, 94, 0.8))",
          scale: 1.02,
        }}
        style={{
          willChange: "opacity, filter, transform",
          fontSize: "clamp(0.6rem, 1.5vw, 0.875rem)",
          lineHeight: "1.2",
        }}
      >
        {asciiLines.map((line, lineIndex) => (
          <motion.div
            key={lineIndex}
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{
              delay: lineIndex * 0.02,
              duration: 0.3,
              ease: "easeOut",
            }}
            style={{
              willChange: "opacity, transform",
            }}
          >
            {line}
          </motion.div>
        ))}
      </motion.pre>
    </div>
  );
}
